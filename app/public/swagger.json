{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample API",
    "version": "1.0.0",
    "title": "Product API"
  },
  "host": "app.localhost",
  "tags": [
    {
      "name": "product",
      "description": "Everything about your Products"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/product/{id}": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Find product by ID",
        "description": "Returns a single product",
        "operationId": "getProductById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "tags": [
          "product"
        ],
        "summary": "Deletes a product",
        "description": "",
        "operationId": "deleteProduct",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "tags": [
          "product"
        ],
        "summary": "Update an existing product",
        "description": "",
        "operationId": "updateProduct",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Product object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product was updated"
          },
          "400": {
            "description": "Invalid params supplied"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/product": {
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Add a new product to the store",
        "description": "",
        "operationId": "addProduct",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product was created",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Map"
        },
        "price": {
          "type": "integer",
          "description": "Price",
          "format": "int64",
          "example": 110
        }
      },
      "xml": {
        "name": "Product"
      }
    }
  }
}
